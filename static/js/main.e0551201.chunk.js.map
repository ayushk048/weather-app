{"version":3,"sources":["App.js","index.js"],"names":["App","useState","isLoading","setIsLoading","location","setlocation","weather","setweather","useEffect","Axios","get","then","res","catch","err","error","console","lo","info","className","data","current","temperature","Date","getHours","onSubmit","e","preventDefault","alert","getDataFromAPI","type","onChange","target","value","placeholder","name","country","toUTCString","split","join","src","weather_icons","alt","weather_descriptions","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2PA6EeA,MAxEf,WAAgB,IAAD,4BACqBC,oBAAS,GAD9B,mBACNC,EADM,KACKC,EADL,OAEmBF,mBAAS,aAF5B,mBAENG,EAFM,KAEIC,EAFJ,OAGiBJ,mBAAS,IAH1B,mBAGNK,EAHM,KAGGC,EAHH,KAuCb,OAjCAC,qBAAU,WACRC,IAAMC,IAAN,gGAAmGN,IAChGO,MAAK,SAAAC,GACJL,EAAWK,GACXT,GAAa,MAEdU,OAAM,SAAAC,GACLA,EAAIC,OAASC,QAAQC,GAAGH,EAAIC,MAAMG,WAIrC,IAuBD,oCACGhB,GAAa,yCACZA,GAAa,yBAAKiB,WAAkB,OAAPb,QAAO,IAAPA,GAAA,UAAAA,EAASc,YAAT,mBAAeC,eAAf,eAAwBC,aAAc,IAAK,IAAIC,MAAOC,WAAa,GAAK,kBAAoB,YAAa,IAAID,MAAOC,WAAa,GAAK,aAAe,OAElL,8BACE,yBAAKL,UAAU,aACb,0BAAMM,SAAU,SAACC,GAAD,OA3BH,SAAAA,GACrBA,EAAEC,iBACFxB,GAAa,GACbM,IAAMC,IAAN,gGAAmGN,IAChGO,MAAK,SAAAC,GACJL,EAAWK,GACXP,EAAY,IACZF,GAAa,MAEdU,OAAM,SAAAC,GACLc,MAAMd,EAAIC,MAAMG,SAiBWW,CAAeH,KACpC,2BACEI,KAAK,OACLX,UAAU,YACVY,SAAU,SAACL,GAAD,OAAOrB,EAAYqB,EAAEM,OAAOC,QACtCA,MAAO7B,EACP8B,YAAY,qBAGlB,kBAAC,WAAD,KACE,yBAAKf,UAAU,eACb,yBAAKA,UAAU,YAAf,WAA4Bb,QAA5B,IAA4BA,GAA5B,UAA4BA,EAASc,YAArC,iBAA4B,EAAehB,gBAA3C,aAA4B,EAAyB+B,KAArD,aAA8D7B,QAA9D,IAA8DA,GAA9D,UAA8DA,EAASc,YAAvE,iBAA8D,EAAehB,gBAA7E,aAA8D,EAAyBgC,SACvF,yBAAKjB,UAAU,SAxBZ,IAAII,MACLc,cAAcC,MAAM,IAAK,GAAGC,KAAK,OAyBrC,yBAAKpB,UAAU,cACb,yBAAKqB,IAAG,OAAElC,QAAF,IAAEA,GAAF,UAAEA,EAASc,YAAX,iBAAE,EAAeC,eAAjB,aAAE,EAAwBoB,cAAc,GAAIC,IAAI,UAAUvB,UAAU,SAC5E,yBAAKA,UAAU,QAAf,WAAwBb,QAAxB,IAAwBA,GAAxB,UAAwBA,EAASc,YAAjC,iBAAwB,EAAeC,eAAvC,aAAwB,EAAwBC,YAAhD,SACA,yBAAKH,UAAU,WAAf,iBAA0Bb,QAA1B,IAA0BA,GAA1B,UAA0BA,EAASc,YAAnC,iBAA0B,EAAeC,eAAzC,aAA0B,EAAwBsB,4BAAlD,QAA0E,wBC9DxFC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,W","file":"static/js/main.e0551201.chunk.js","sourcesContent":["import Axios from 'axios';\nimport React, { Fragment, useEffect, useState } from 'react';\n\n\n\nfunction App() {\n  const [isLoading, setIsLoading] = useState(true);\n  const [location, setlocation] = useState('ahmedabad');\n  const [weather, setweather] = useState({})\n\n\n  useEffect(() => {\n    Axios.get(`http://api.weatherstack.com/current?access_key=7e7c309ab455a71471c68ff12a36d13e&query=${location}`)\n      .then(res => {\n        setweather(res);\n        setIsLoading(false);\n      })\n      .catch(err => {\n        err.error && console.lo(err.error.info);\n\n      })\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const getDataFromAPI = e => {\n    e.preventDefault();\n    setIsLoading(true);\n    Axios.get(`http://api.weatherstack.com/current?access_key=7e7c309ab455a71471c68ff12a36d13e&query=${location}`)\n      .then(res => {\n        setweather(res);\n        setlocation('');\n        setIsLoading(false);\n      })\n      .catch(err => {\n        alert(err.error.info)\n      })\n  }\n\n  const dateGenerator = () => {\n    const date = new Date();\n    return date.toUTCString().split(\" \", 4).join(\" \");\n  }\n\n\n  return (\n    <>\n      {isLoading && <div>loading</div>}\n      {!isLoading && <div className={weather?.data?.current?.temperature > 30 ? new Date().getHours() > 18 ? 'App warm  night' : \"App warm\" : new Date().getHours() > 18 ? \"App night \" : 'App'}>\n        {/* <div className=\"App\" > */}\n        <main>\n          <div className=\"searchBox\">\n            <form onSubmit={(e) => getDataFromAPI(e)}>\n              <input\n                type=\"text\"\n                className=\"searchBar\"\n                onChange={(e) => setlocation(e.target.value)}\n                value={location}\n                placeholder=\"Find your city\" />\n            </form>\n          </div>\n          <Fragment>\n            <div className=\"locationBox\">\n              <div className=\"location\"> {weather?.data?.location?.name} , {weather?.data?.location?.country}</div>\n              <div className=\"date\">{dateGenerator()}</div>\n            </div>\n            <div className=\"weatherBox\">\n              <img src={weather?.data?.current?.weather_icons[0]} alt='weather' className=\"icon\" />\n              <div className=\"temp\"> {weather?.data?.current?.temperature}Â°c</div>\n              <div className=\"weather\">{weather?.data?.current?.weather_descriptions ?? \"No description\"}</div>\n            </div>\n          </Fragment>\n        </main>\n      </div>}\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}